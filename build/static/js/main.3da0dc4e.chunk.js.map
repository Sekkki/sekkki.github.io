{"version":3,"sources":["reducers/index.js","reducers/user.js","reducers/auth.js","components/Layouts/Header/header.js","components/Layouts/Footer/footer.js","components/Layouts/index.js","components/blocks/main/index.js","App.js","serviceWorker.js","index.js"],"names":["allReducers","combineReducers","user","state","arguments","length","undefined","action","type","payload","auth","header","react_default","a","createElement","className","Component","footer","Container","Row","Col","md","xs","lg","fluid","index","console","log","this","props","children","header_header","footer_footer","store","applyMiddleware","thunk","createStore","middleware","reducers","App","es","react_router_dom","_ref","component","Layout","layout","rest","Object","objectWithoutProperties","react_router","assign","render","exact","path","main_index","React","withCookies","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3da0dc4e.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport User from './user';\r\nimport Auth from './auth';\r\n\r\nconst allReducers = combineReducers({\r\n  user: User,\r\n  auth: Auth\r\n})\r\n\r\nexport default allReducers;\r\n","export default (state = {}, action) => {\r\n    switch (action.type){\r\n        case \"SET_USER\":\r\n            return action.payload;\r\n        case \"REMOVE_USER\":\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export default (state = {}, action) => {\r\n    switch (action.type){\r\n        case \"LOG_IN\":\r\n            return true;\r\n        case \"LOG_OUT\":\r\n            return false;\r\n        case \"SET_AUTH\":\r\n            return action.payload || false;   \r\n        default:\r\n            return false;\r\n    }\r\n};\r\n","import React, { Component } from 'react'\r\nimport './style.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport { withCookies } from 'react-cookie';\r\n\r\nexport default class header extends Component {\r\n    render() {\r\n\r\n        const isAuthenticated = false;\r\n\r\n        return (\r\n            <header>\r\n                <div className=\"brand\">\r\n                    <p>Hyppnotic<span>store.</span></p>\r\n                </div>\r\n                <div className=\"menu\">\r\n                    <ul>\r\n                        <li>Главная</li>\r\n                        <li>Магазин</li>\r\n                        <li>О нас</li>\r\n                        <li>Помощь</li>\r\n                        <li>Поддержка</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"button-xs\">Open</div>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './style.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { Nav, Navbar, NavDropdown, Container, Row, Col } from 'react-bootstrap';\r\nimport { withCookies } from 'react-cookie';\r\n\r\nexport default class footer extends Component {\r\n    render() {\r\n\r\n        const isAuthenticated = false;\r\n\r\n        return (\r\n            <footer>\r\n                <Container>\r\n                    <Row>\r\n                        <Col md={12} xs={12}>\r\n                            <div className=\"footer-brand\">\r\n                                Hyppnotic.store\r\n                            </div>\r\n                        </Col>\r\n                        <Col xs={12} md={6} lg={6}>\r\n                            <div className=\"footer-links\">\r\n                                <ul>\r\n                                    <li>Главная</li>\r\n                                    <li>Магазин</li>\r\n                                    <li>О нас</li>\r\n                                    <li>Помощь</li>\r\n                                    <li>Поддержка</li>\r\n                                </ul>\r\n                            </div>\r\n                        </Col>\r\n                        <Col xs={12} md={6} lg={6}>\r\n                            <div className=\"footer-links\">\r\n                                <ul>\r\n                                    <li>Группа VK</li>\r\n                                    <li>Instagram</li>\r\n                                    <li>Twitter</li>\r\n                                    <li>Github</li>\r\n                                    <li>Facebook</li>\r\n                                </ul>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <Container fluid className=\"footer-rights\">\r\n                    <Row>\r\n                        <Col xs={12}>\r\n                                <p>All rights are reserved by Hyppnotic company @2018-2019</p>\r\n                        </Col>    \r\n                    </Row>\r\n                </Container>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Header from './Header/header';\r\nimport Footer from './Footer/footer';\r\n\r\nexport default class index extends Component {\r\n    render() {\r\n        console.log(this.props.children);\r\n        return (\r\n            <div className=\"root\">\r\n                <Header />\r\n                <div className=\"container-height\">\r\n                {this.props.children}\r\n                </div>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class index extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                Main\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect, BrowserRouter } from \"react-router-dom\";\nimport './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport { withCookies } from 'react-cookie';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\nimport Layout from './components/Layouts/index';\n// import adminLayout from './components/Layouts/admin/layout';\nimport Main from './components/blocks/main/index';\n\nconst middleware = applyMiddleware(thunk)(createStore);\n\nconst store = middleware(reducers);\n\nclass App extends React.Component {\n\n  render() {\n\n    const AppRoute = ({ component: Component, layout: Layout, ...rest }) => (\n      <Route {...rest} render={props => (\n        <Layout>\n          <Component {...props} />\n        </Layout>\n      )} />\n    )\n    \n    /* const PrivateRoute = ({ component: Component, layout: Layout, ...rest }) => (\n      <Route {...rest} render={(props) => (\n        store.isAuthenticated === true\n          ? <Layout store={store}><Component {...props} /></Layout>\n          : <Redirect to='/login' />\n      )} />\n    ) */\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <Router>\n            <AppRoute exact path=\"/\" layout={Layout} component={() => <Main />} />         \n          </Router> \n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default withCookies(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}